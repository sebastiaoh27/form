{"version":3,"sources":["./src/environments/environment.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import {Component} from '@angular/core';\nimport {FormControl, Validators} from '@angular/forms';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  email = new FormControl('', [Validators.required, Validators.email]);\n  name = new FormControl('',[Validators.required])\n  address = new FormControl('',[Validators.required])\n\n  getErrorMessage() {\n    if (this.email.hasError('required') || this.name.hasError('required') || this.address.hasError('required')) {\n      return 'Please fill in all the fields';\n    }\n\n    return this.email.hasError('email') ? 'Not a valid email' : '';\n  }\n}\n","<div class=\"form\">\n  <p>\n    <mat-form-field appearance=\"fill\">\n      <mat-label>Name</mat-label>\n      <input matInput placeholder=\"Enter your First and Last name...\" [formControl]=\"name\" required>\n      <mat-error *ngIf=\"name.invalid\">{{getErrorMessage()}}</mat-error>\n    </mat-form-field>\n  </p>\n  <p>\n    <mat-form-field appearance=\"fill\">\n      <mat-label>Email</mat-label>\n      <input matInput placeholder=\"Enter your email...\" [formControl]=\"email\" required>\n      <mat-error *ngIf=\"email.invalid\">{{getErrorMessage()}}</mat-error>\n    </mat-form-field>\n  </p>\n  <p>\n    <mat-form-field appearance=\"fill\">\n      <mat-label>Address</mat-label>\n      <input matInput placeholder=\"Enter your address...\" [formControl]=\"address\" required>\n      <mat-error *ngIf=\"address.invalid\">{{getErrorMessage()}}</mat-error>\n    </mat-form-field>\n  </p>\n</div>\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppComponent } from './app.component';\nimport {ReactiveFormsModule} from \"@angular/forms\";\nimport { NoopAnimationsModule } from '@angular/platform-browser/animations';\nimport {MatFormFieldModule} from \"@angular/material/form-field\";\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    ReactiveFormsModule,\n    NoopAnimationsModule,\n    MatFormFieldModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}